services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - microservice-network
    restart: unless-stopped

  discovery-server-node:
    build: ./discovery-server-node
    container_name: discovery-server-node
    ports:
      - "8761:8761"
    networks:
      - microservice-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:8761/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 15s

  # Kong Database
  kong-database:
    image: postgres:13
    container_name: kong-database
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kongpass
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - microservice-network
    restart: unless-stopped
    volumes:
      - kong_data:/var/lib/postgresql/data

  # Kong Migration
  kong-migration:
    image: kong:3.4.0
    command: kong migrations bootstrap
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
    networks:
      - microservice-network
    restart: on-failure

  # Kong Gateway
  kong:
    image: kong:3.4.0
    container_name: kong
    depends_on:
      kong-database:
        condition: service_healthy
      kong-migration:
        condition: service_completed_successfully
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    ports:
      - "8000:8000" # Kong proxy port
      - "8443:8443" # Kong proxy SSL port
      - "8001:8001" # Kong Admin API
      - "8444:8444" # Kong Admin API SSL
      - "8002:8002" # Kong Manager
    networks:
      - microservice-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 30s
      retries: 10
      start_period: 30s

  # Konga - Kong Admin UI
  konga:
    image: pantsel/konga:latest
    container_name: konga
    environment:
      NODE_ENV: production
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: kongpass
      DB_DATABASE: konga
      KONGA_HOOK_TIMEOUT: 120000
    depends_on:
      kong:
        condition: service_healthy
    ports:
      - "1337:1337"
    networks:
      - microservice-network
    restart: unless-stopped

  # Kong Setup
  kong-setup:
    build: ./kong
    container_name: kong-setup
    depends_on:
      kong:
        condition: service_healthy
    networks:
      - microservice-network
    restart: on-failure

  product-service-node:
    build: ./product-service-node
    container_name: product-service-node
    ports:
      - "8081:8081"
    environment:
      - MONGO_URI=mongodb://mongodb:27017/product-service
      - DISCOVERY_URL=http://discovery-server-node:8761
    networks:
      - microservice-network
    restart: unless-stopped
    depends_on:
      - mongodb
      - discovery-server-node

  order-service-node:
    build: ./order-service-node
    container_name: order-service-node
    ports:
      - "8082:8082"
    environment:
      - MONGO_URI=mongodb://mongodb:27017/order-service
      - DISCOVERY_URL=http://discovery-server-node:8761
      - INVENTORY_SERVICE_URL=http://inventory-service-node:8083
    networks:
      - microservice-network
    restart: unless-stopped
    depends_on:
      - mongodb
      - discovery-server-node
      - inventory-service-node

  inventory-service-node:
    build: ./inventory-service-node
    container_name: inventory-service-node
    ports:
      - "8083:8083"
    environment:
      - MONGO_URI=mongodb://mongodb:27017/inventory-service
      - DISCOVERY_URL=http://discovery-server-node:8761
    networks:
      - microservice-network
    restart: unless-stopped
    depends_on:
      - mongodb
      - discovery-server-node

  payment-service-node:
    build: ./payment-service-node
    container_name: payment-service-node
    ports:
      - "8084:8084"
    environment:
      - MONGO_URI=mongodb://mongodb:27017/payment-service
      - DISCOVERY_URL=http://discovery-server-node:8761
      - ORDER_SERVICE_URL=http://order-service-node:8082
    networks:
      - microservice-network
    restart: unless-stopped
    depends_on:
      - mongodb
      - discovery-server-node
      - order-service-node

  shipping-service-node:
    build: ./shipping-service-node
    container_name: shipping-service-node
    ports:
      - "8085:8085"
    environment:
      - MONGO_URI=mongodb://mongodb:27017/shipping-service
      - DISCOVERY_URL=http://discovery-server-node:8761
      - ORDER_SERVICE_URL=http://order-service-node:8082
    networks:
      - microservice-network
    restart: unless-stopped
    depends_on:
      - mongodb
      - discovery-server-node
      - order-service-node

networks:
  microservice-network:
    driver: bridge

volumes:
  mongodb_data:
  kong_data:
