services:
  # Product Service
  product-service:
    build: ./product-service
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@product-db:5432/product_db
    depends_on:
      product-db:
        condition: service_healthy

  # Product Database
  product-db:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=product_db
    volumes:
      - product-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Order Service
  order-service:
    build: ./order-service
    ports:
      - "3002:3002"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@order-db:5432/order_db
      - PRODUCT_SERVICE_URL=http://product-service:3001
      - CUSTOMER_SERVICE_URL=http://customer-service:3003
    depends_on:
      order-db:
        condition: service_healthy
      product-service:
        condition: service_started
      customer-service:
        condition: service_started

  # Order Database
  order-db:
    image: postgres:14
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=order_db
    volumes:
      - order-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Customer Service
  customer-service:
    build: ./customer-service
    ports:
      - "3003:3003"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@customer-db:5432/customer_db
    depends_on:
      customer-db:
        condition: service_healthy

  # Customer Database
  customer-db:
    image: postgres:14
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=customer_db
    volumes:
      - customer-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Kong Database
  kong-database:
    image: postgres:14
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_PASSWORD=kong
      - POSTGRES_DB=kong
    volumes:
      - kong-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Kong Migration
  kong-migration:
    image: kong:3.4.0
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
      - KONG_PG_DATABASE=kong
    command: kong migrations bootstrap
    restart: on-failure

  # Kong API Gateway
  kong:
    image: kong:3.4.0
    ports:
      - "8000:8000" # Proxy
      - "8001:8001" # Admin API
      - "8443:8443" # Proxy SSL
      - "8444:8444" # Admin API SSL
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
      - KONG_PG_DATABASE=kong
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    depends_on:
      kong-migration:
        condition: service_started
      product-service:
        condition: service_started
      order-service:
        condition: service_started
      customer-service:
        condition: service_started
    restart: on-failure

  # Konga - Kong Admin UI
  konga:
    image: pantsel/konga:latest
    ports:
      - "1337:1337"
    environment:
      - NODE_ENV=production
      - DB_ADAPTER=postgres
      - DB_HOST=kong-database
      - DB_PORT=5432
      - DB_USER=kong
      - DB_PASSWORD=kong
      - DB_DATABASE=konga
      - KONGA_HOOK_TIMEOUT=120000
      - DB_PG_SCHEMA=public
    depends_on:
      kong:
        condition: service_started

volumes:
  product-db-data:
  order-db-data:
  customer-db-data:
  kong-db-data:
